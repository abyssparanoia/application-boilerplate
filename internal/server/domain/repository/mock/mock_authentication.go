// Code generated by MockGen. DO NOT EDIT.
// Source: authentication.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	model "github.com/abyssparanoia/application-boilerplate/internal/server/domain/model"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthentication is a mock of Authentication interface.
type MockAuthentication struct {
	ctrl     *gomock.Controller
	recorder *MockAuthenticationMockRecorder
}

// MockAuthenticationMockRecorder is the mock recorder for MockAuthentication.
type MockAuthenticationMockRecorder struct {
	mock *MockAuthentication
}

// NewMockAuthentication creates a new mock instance.
func NewMockAuthentication(ctrl *gomock.Controller) *MockAuthentication {
	mock := &MockAuthentication{ctrl: ctrl}
	mock.recorder = &MockAuthenticationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthentication) EXPECT() *MockAuthenticationMockRecorder {
	return m.recorder
}

// StoreClaims mocks base method.
func (m *MockAuthentication) StoreClaims(ctx context.Context, userID string, claims *model.Claims) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreClaims", ctx, userID, claims)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreClaims indicates an expected call of StoreClaims.
func (mr *MockAuthenticationMockRecorder) StoreClaims(ctx, userID, claims interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreClaims", reflect.TypeOf((*MockAuthentication)(nil).StoreClaims), ctx, userID, claims)
}

// VerifyIDToken mocks base method.
func (m *MockAuthentication) VerifyIDToken(ctx context.Context, idToken string) (*model.AuthUserInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyIDToken", ctx, idToken)
	ret0, _ := ret[0].(*model.AuthUserInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyIDToken indicates an expected call of VerifyIDToken.
func (mr *MockAuthenticationMockRecorder) VerifyIDToken(ctx, idToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyIDToken", reflect.TypeOf((*MockAuthentication)(nil).VerifyIDToken), ctx, idToken)
}
